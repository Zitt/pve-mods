diff --git a/usr/share/perl5/PVE/API2/Nodes.pm b/../Nodes.pm
index 47c2d74..8c90359 100644
--- a/usr/share/perl5/PVE/API2/Nodes.pm
+++ b/../Nodes.pm
@@ -395,40 +395,104 @@ __PACKAGE__->register_method({
 	};
 
 	$res->{swap} = {
 	    free => $meminfo->{swapfree},
 	    total => $meminfo->{swaptotal},
 	    used => $meminfo->{swapused},
 	};
 
 	$res->{pveversion} = PVE::pvecfg::package() . "/" .
 	    PVE::pvecfg::version_text();
 
 	my $dinfo = df('/', 1);     # output is bytes
 
 	$res->{rootfs} = {
 	    total => $dinfo->{blocks},
 	    avail => $dinfo->{bavail},
 	    used => $dinfo->{used},
 	    free => $dinfo->{blocks} - $dinfo->{used},
 	};
 
+	my $sensors = eval { decode_json(`sensors -j`); };
+	my $cputemp_val = 0;
+	my $cputemp_crit = 100;
+	my $hd1temp_val = 0;
+	my $hd1temp_crit = 70;
+	my $hd2temp_val = 0;
+	my $hd2temp_crit = 70;
+	my $hd3temp_val = 0;
+	my $hd3temp_crit = 70;
+	if (defined($sensors)) {
+		if (defined($sensors->{'coretemp-isa-0000'}) && defined($sensors->{'coretemp-isa-0000'}{'Package id 0'})) {
+			if (defined($sensors->{'coretemp-isa-0000'}{'Package id 0'}{'temp1_input'})) {
+				$cputemp_val = $sensors->{'coretemp-isa-0000'}{'Package id 0'}{'temp1_input'};
+			}
+			if (defined($sensors->{'coretemp-isa-0000'}{'Package id 0'}{'temp1_crit'})) {
+				$cputemp_crit = $sensors->{'coretemp-isa-0000'}{'Package id 0'}{'temp1_crit'};
+			}
+		}
+		if (defined($sensors->{'drivetemp-scsi-0-0'}) && defined($sensors->{'drivetemp-scsi-0-0'}{'temp1'})) {
+			if (defined($sensors->{'drivetemp-scsi-0-0'}{'temp1'}{'temp1_input'})) {
+				$hd1temp_val = $sensors->{'drivetemp-scsi-0-0'}{'temp1'}{'temp1_input'};
+			}
+			if (defined($sensors->{'drivetemp-scsi-0-0'}{'temp1'}{'temp1_crit'})) {
+				$hd1temp_crit = $sensors->{'drivetemp-scsi-0-0'}{'temp1'}{'temp1_crit'};
+			}
+		}
+		if (defined($sensors->{'drivetemp-scsi-1-0'}) && defined($sensors->{'drivetemp-scsi-1-0'}{'temp1'})) {
+			if (defined($sensors->{'drivetemp-scsi-1-0'}{'temp1'}{'temp1_input'})) {
+				$hd2temp_val = $sensors->{'drivetemp-scsi-1-0'}{'temp1'}{'temp1_input'};
+			}
+			if (defined($sensors->{'drivetemp-scsi-1-0'}{'temp1'}{'temp1_crit'})) {
+				$hd2temp_crit = $sensors->{'drivetemp-scsi-1-0'}{'temp1'}{'temp1_crit'};
+			}
+		}
+		if (defined($sensors->{'drivetemp-scsi-2-0'}) && defined($sensors->{'drivetemp-scsi-2-0'}{'temp1'})) {
+			if (defined($sensors->{'drivetemp-scsi-2-0'}{'temp1'}{'temp1_input'})) {
+				$hd3temp_val = $sensors->{'drivetemp-scsi-2-0'}{'temp1'}{'temp1_input'};
+			}
+			if (defined($sensors->{'drivetemp-scsi-2-0'}{'temp1'}{'temp1_crit'})) {
+				$hd3temp_crit = $sensors->{'drivetemp-scsi-2-0'}{'temp1'}{'temp1_crit'};
+			}
+		}
+	}
+
+	$res->{cputemp} = {
+	    used => $cputemp_val,
+	    total => $cputemp_crit,
+	};
+
+	$res->{hd1temp} = {
+	    used => $hd1temp_val,
+	    total => $hd1temp_crit,
+	};
+
+	$res->{hd2temp} = {
+	    used => $hd2temp_val,
+	    total => $hd2temp_crit,
+	};
+
+	$res->{hd3temp} = {
+	    used => $hd3temp_val,
+	    total => $hd3temp_crit,
+	};
+
 	return $res;
     }});
 
 __PACKAGE__->register_method({
     name => 'netstat',
     path => 'netstat',
     method => 'GET',
     permissions => {
 	check => ['perm', '/nodes/{node}', [ 'Sys.Audit' ]],
     },
     description => "Read tap/vm network device interface counters",
     proxyto => 'node',
     parameters => {
 	additionalProperties => 0,
 	properties => {
 	    node => get_standard_option('pve-node'),
 	},
     },
     returns => {
 	type => "array",
